*** Keywords ***
Open Intranet and Login	
	${profile}=		create_ff_profile		${profileAddress}
	Log			${profile}
	Open Browser	${urlOfIntranet}		${browser}		ff_profile_dir=${profile}		remote_url=http://192.168.43.6:4444/wd/hub		desired_capabilities={"browserName":"firefox","platform":"WINDOWS"}
	Maximize Browser Window
	Wait Until Element Is Visible		${EnterUsername}
	Input Text			${EnterUsername}		${username}
	Input Text			${EnterPassword}		${password}	
	Click Element		${LoginButton}
	
Logout And Close Browser
	Wait Until Element Is Visible		${LogoutLink}	timeout=10s
	Click Element		${LogoutLink}
	Wait Until Element Is Visible		${EnterUsername}	timeout=10s
	Close Browser
	


Verify All Dates Of This Month
	[Arguments]			${DateValue}
	: For		${item}		IN		@{DateValue}
	\	Should Be True		'${item}'>='01'
	\	Should Be True		'${item}'<='31'
	
Select Date From Options And Verify
	[Arguments]			${TableCell}
	Click Element		${SearchDateList}
	Wait Until Element Is Visible		${SelectDateOptionSuggestions}
	${totalSuggestions}=		Get Element Count		${SelectDateOptionSuggestions}
	: FOR		${suggestionNum}		IN RANGE		2		${totalSuggestions}+1
	\	Click Element		${SearchDateList}
	\	Wait Until Element Is Visible		${SelectDateOptionSuggestions}
	\	${num}=		Convert To String		${suggestionNum}
	\	${SelectDateOption}=		Replace String			${SelectDateOption}		NUM			${num}
	\	${dateValue}=		Get Value		${SelectDateOption}
	\	Click Element		${SelectDateOption}
	\	Wait Until Element Is Visible		${TableRows}
	\	${ColumnValues}=	Get Data From Columns		${TableCell}
	\	${SelectDateOption}=		Replace String			${SelectDateOption}		${num}		NUM	
	\	Continue For Loop If		${ColumnValues}==[]
	\	Verify All Date According to Selected Date			${ColumnValues}			${dateValue}
	
	
	
	
Verify All Date According to Selected Date
	[Arguments]			${DateList}			${dateValue}
	: For	${item}		IN		@{DateList}	
	\	Should Be Equal			${item}		${dateValue}

Verify All Columns Data From Employee Details For All Rows
	${TotalRows}=		Get Element Count		${TableRows}
	: FOR		${row}		IN RANGE		1		${TotalRows}+1
	\	${rowNumber}=		Convert To String		${row}
	\	Get Data From All Columns And Verify		${TableCellValues}		${rowNumber}
	\	Wait Until Element Is Visible		${TableRows}


Get Data From All Columns And Verify
	[Arguments]			${TableCellValues}		${rowNumber}
	${EyeIcon}=		Replace String			${EyeIcon}		ROW			${rowNumber}
	${TableCellValues}=		Replace String			${TableCellValues}		ROW			${rowNumber}
	&{columnsDict}=		Create Dictionary
	Log		${columnsDict}	
	${length}=		Get Length		${headerName}	
	: FOR		${col}		IN RANGE		${length}
	\	${TableCellValues}=		Replace String			${TableCellValues}		VALUE			${headerName[${col}]}
	\	${cellValue}=		Get Text		${TableCellValues}
	\	Set To Dictionary			${columnsDict}		${headerName[${col}]}		${cellValue}
	\	Log				${columnsDict}
	\	${TableCellValues}=		Replace String			${TableCellValues}		${headerName[${col}]}		VALUE
	Click Element		${EyeIcon}
	Wait Until Element Is Visible		${EmployeeDetailBox}
	: FOR		${num}		IN RANGE		${length}	
	\	${status}=		Run Keyword And Return Status		Element Should Contain			${EmployeeDetailBox}		${columnsDict['${headerName[${num}]}']}
	\	${splitList}=		Split String		${columnsDict['${headerName[${num}]}']}			${SPACE}
	\	${status1}=		Run Keyword If		${status}==False		Run Keyword And Return Status		Element Should Contain			${EmployeeDetailBox}		${splitList[0]}	
	\	${splitList1}=		Split String		${columnsDict['${headerName[${num}]}']}			.
	\	${status2}=		Run Keyword If		${status}==False and ${status1}==False		Run Keyword And Return Status		Element Should Contain			${EmployeeDetailBox}		${splitList1[0]}
	\	${splitList2}=		Split String		${columnsDict['${headerName[${num}]}']}			\n
	\	${status3}=		Run Keyword If		${status}==False and ${status1}==False and ${status2}==False		Run Keyword And Return Status		Element Should Contain			${EmployeeDetailBox}		${splitList2[0]}
	\	${splitList3}=		Split String		${columnsDict['${headerName[${num}]}']}			,
	\	Run Keyword If		${status}==False and ${status1}==False and ${status2}==False and ${status3}==False		Element Should Contain			${EmployeeDetailBox}		${splitList3[0]}
	Go Back
	Wait Until Element Is Visible		${TableRows}
	${EyeIcon}=		Replace String			${EyeIcon}		${rowNumber}		ROW	
	${TableCellValues}=		Replace String			${TableCellValues}		${rowNumber}		ROW
	
Get Data From Columns	
	[Arguments]			${TableCell}
	Wait Until Element Is Visible		${TableRows}		timeout=15s
	@{ColumnValues}=			Create List
	${ColumnValues}=		Get Data From All Pages		${ColumnValues}		${TableCell}
	Return From Keyword			${ColumnValues}

Get Data From All Pages
	[Arguments]		${ColumnValues}			${TableCell}
	: For		${page}		IN RANGE		500	
	\	${ColumnValues}=		Get Data From All Rows 		${ColumnValues}			${TableCell}
	\	${status}=		Run Keyword And Return Status		Wait Until Element Is Visible		${NextButtonLink}
	\	Run Keyword If		${status}==True			Click Element		${NextButtonLink}
	\	...		ELSE		Exit For Loop
	\	Wait Until Element Is Visible		${TableRows}
	\	${page}=		Evaluate		${page}+1
	Log		${ColumnValues}
	Return From Keyword			${ColumnValues}
	${categoryName}=		Get Text		${ClassifiedMenuButtons}

Get Data From All Rows
	[Arguments]		${ColumnValues}		${TableCell}
	${totalRows}=		Get Element Count		${TableRows}
	: For		${row}		IN RANGE		1		${totalRows}
	\	${rowNum}=		Convert To String		${row}
	\	${TableCell}=		Replace String			${TableCell}		ROW		${rowNum}
	\	${value}=		Get Text			${TableCell}
	\	${TableCell}=		Replace String			${TableCell}		${rowNum}		ROW		count=1	
	\	${value}=		Convert To Lowercase		${value}
	\	${value}=		Split String		${value}		${SPACE}
	\	${value}=		Split String		${value[0]}		\n
	\	${value}=		Split String		${value[0]}		.
	\	${status}=		Run Keyword And Return Status		List Should Contain Value		${value}		all	
	\	Continue For Loop If		${status}==True
	\	Append To List		${ColumnValues}			${value[0]}
	\	Log		${ColumnValues}
	Return From Keyword			${ColumnValues}
		
		
Verify Column According To Ascending Sorting   
	[Arguments]		${ColumnValues}
	${newValuesList}=		Copy List		${ColumnValues}
	Sort List		${ColumnValues}
	Log		${ColumnValues}
	Log		${newValuesList}
	${statusEquality}=		Run Keyword And Return Status		Should Be Equal		${newValuesList}		${ColumnValues}

Verify Column According To Descending Sorting
	[Arguments]		${ColumnValues}
	${newValuesList}=		Copy List		${ColumnValues}
	Log		${ColumnValues}
	Sort List		${ColumnValues}
	Log		${ColumnValues}
	Reverse List		${ColumnValues}
	Log		${ColumnValues}
	Log		${newValuesList}
	${statusEquality}=		Run Keyword And Return Status		Should Be Equal		${newValuesList}		${ColumnValues}

Verify Ascending And Descending Sorting For Numbers
	[Arguments]		${ColumnValues}
	Log			${ColumnValues}
	${status1}=			Run Keyword And Return Status			Element Should Be Visible		${SortTopPressedButton}
	${status2}=			Run Keyword And Return Status			Element Should Be Visible		${SortDownPressedButton}	
	${length}=		Get Length		${ColumnValues}
	: FOR		${num}		IN RANGE	0		${length}
	\	${value1}=		Set Variable	${ColumnValues[${num}]}
	\	${newNum}=		Evaluate	${num}+1
	\	Exit For Loop If		${newNum}>=${length}	
	\	${value2}=		Set Variable	${ColumnValues[${newNum}]}
	\	Run Keyword If		${status1}==True		Should Be True		'${value1}'<='${value2}'
	\	Run Keyword If		${status2}==True		Should Be True		'${value1}'>='${value2}'
	

Verify Ascending Sorting For Date
	[Arguments]		${ColumnValues}
	${length}=		Get Length		${ColumnValues}
	: FOR		${num}		IN RANGE		0	${length}
	\	${date1}=		Split String		${ColumnValues[${num}]}			-
	\	${newNum}=		Evaluate		${num}+1
	\	Exit For Loop If		${newNum}>=${length}
	\	${date2}=		Split String		${ColumnValues[${newNum}]}			-
	\	${status}=		Run Keyword And Return Status		Should Be True		'${date1[0]}'<='${date2[0]}'	
	\	${status1}=		Run Keyword If			'${date1[0]}'=='${date2[0]}'		Run Keyword And Return Status		Should Be True		'${date1[1]}'<='${date2[1]}'	
	\	${status2}=		Run Keyword If			'${date1[1]}'=='${date2[1]}' and '${date1[0]}'=='${date2[0]}'		Run Keyword And Return Status		Should Be True		${date1[2]}<=${date2[2]}


Verify Descending Sorting For Date
	[Arguments]		${ColumnValues}
	Log			${ColumnValues}
	${length}=		Get Length		${ColumnValues}
	: FOR		${num}		IN RANGE		0	${length}
	\	${date1}=		Split String		${ColumnValues[${num}]}			-
	\	${newNum}=		Evaluate		${num}+1
	\	Exit For Loop If		${newNum}>=${length}
	\	${date2}=		Split String		${ColumnValues[${newNum}]}			-
	\	${status}=		Run Keyword And Return Status		Should Be True		'${date1[0]}'>='${date2[0]}'
	\	${status1}=		Run Keyword If			'${date1[0]}'=='${date2[0]}'		Run Keyword And Return Status		Should Be True		'${date1[1]}'>='${date2[1]}'	
	\	${status2}=		Run Keyword If			'${date1[1]}'=='${date2[1]}' and '${date1[0]}'=='${date2[0]}'		Run Keyword And Return Status		Should Be True		'${date1[2]}'>='${date2[2]}'

	

